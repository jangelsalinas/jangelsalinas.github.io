---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';

const experiences = await getCollection('experience');
const sortedExperiences = experiences.sort((a, b) => b.data.startDate.getTime() - a.data.startDate.getTime());
---

<Layout title="Experiencia - Jos√© √Ångel Salinas">
  <Header />
  
  <main class="min-h-screen pt-24 pb-16">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header Section -->
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          Mi Experiencia
        </h1>
        <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
          Un recorrido por mi trayectoria profesional, los proyectos en los que he trabajado 
          y las tecnolog√≠as que he dominado a lo largo de mi carrera.
        </p>
      </div>

      <!-- Experience Timeline -->
      <div class="relative">
        <!-- Vertical Line -->
        <div class="absolute left-8 top-0 bottom-0 w-0.5 bg-gray-300 dark:bg-gray-600"></div>
        
        <div class="space-y-12">
          {sortedExperiences.map((experience, index) => (
            <div class="relative flex items-start">
              <!-- Timeline Dot -->
              <div class="absolute left-6 w-4 h-4 bg-blue-600 rounded-full border-4 border-white dark:border-gray-900 shadow-lg"></div>
              
              <!-- Content -->
              <div class="ml-20 bg-white dark:bg-gray-900 rounded-xl shadow-lg p-8 w-full">
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                  <div>
                    <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
                      {experience.data.title}
                    </h2>
                    <h3 class="text-lg font-semibold text-blue-600 dark:text-blue-400">
                      {experience.data.company}
                    </h3>
                    {experience.data.location && (
                      <p class="text-gray-600 dark:text-gray-300">
                        üìç {experience.data.location}
                      </p>
                    )}
                  </div>
                  
                  <div class="mt-2 sm:mt-0 text-right">
                    <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium ${
                      experience.data.current 
                        ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                        : 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200'
                    }`}>
                      {experience.data.current ? 'Actual' : 'Finalizado'}
                    </span>
                    <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                      {experience.data.startDate.toLocaleDateString('es-ES', { 
                        year: 'numeric', 
                        month: 'long' 
                      })} - {
                        experience.data.current 
                          ? 'Presente'
                          : experience.data.endDate?.toLocaleDateString('es-ES', { 
                              year: 'numeric', 
                              month: 'long' 
                            })
                      }
                    </p>
                  </div>
                </div>

                <!-- Experience Description -->
                <div class="prose dark:prose-invert max-w-none mb-6">
                  <div set:html={experience.body} class="text-gray-600 dark:text-gray-300" />
                </div>

                <!-- Technologies -->
                {experience.data.technologies && experience.data.technologies.length > 0 && (
                  <div class="mb-6">
                    <h4 class="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
                      Tecnolog√≠as utilizadas:
                    </h4>
                    <div class="flex flex-wrap gap-2">
                      {experience.data.technologies.map(tech => (
                        <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm font-medium">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                )}

                <!-- Achievements -->
                {experience.data.achievements && experience.data.achievements.length > 0 && (
                  <div>
                    <h4 class="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
                      Logros destacados:
                    </h4>
                    <ul class="space-y-2">
                      {experience.data.achievements.map(achievement => (
                        <li class="flex items-start space-x-2">
                          <svg class="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                          </svg>
                          <span class="text-gray-600 dark:text-gray-300 text-sm">
                            {achievement}
                          </span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Skills Summary -->
      <div class="mt-16 bg-gray-50 dark:bg-gray-800 rounded-xl p-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white text-center mb-8">
          Resumen de Habilidades
        </h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <!-- Frontend Skills -->
          <div class="text-center">
            <div class="bg-blue-100 dark:bg-blue-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2l3.09 6.26L22 9l-5 4.74L18.18 21 12 17.77 5.82 21 7 13.74 2 9l6.91-1.74L12 2z"/>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Frontend</h3>
            <div class="flex flex-wrap justify-center gap-2">
              {['React', 'Vue.js', 'TypeScript', 'Tailwind', 'Astro'].map(skill => (
                <span class="bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-sm">
                  {skill}
                </span>
              ))}
            </div>
          </div>

          <!-- Backend Skills -->
          <div class="text-center">
            <div class="bg-green-100 dark:bg-green-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 24 24">
                <path d="M4.5 12.75l6 6 9-13.5"/>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Backend</h3>
            <div class="flex flex-wrap justify-center gap-2">
              {['Node.js', 'Express', 'PostgreSQL', 'MongoDB', 'JWT'].map(skill => (
                <span class="bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-sm">
                  {skill}
                </span>
              ))}
            </div>
          </div>

          <!-- DevOps Skills -->
          <div class="text-center">
            <div class="bg-purple-100 dark:bg-purple-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-purple-600 dark:text-purple-400" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2L2 7V10C2 16 6 20.5 12 22C18 20.5 22 16 22 10V7L12 2Z"/>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">DevOps</h3>
            <div class="flex flex-wrap justify-center gap-2">
              {['Docker', 'AWS', 'GitHub Actions', 'Linux', 'Git'].map(skill => (
                <span class="bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-sm">
                  {skill}
                </span>
              ))}
            </div>
          </div>
        </div>
      </div>

      <!-- CTA Section -->
      <div class="mt-16 text-center">
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
          ¬øQuieres saber m√°s sobre mi experiencia?
        </h2>
        <p class="text-lg text-gray-600 dark:text-gray-300 mb-8">
          Descarga mi CV o contacta conmigo para hablar sobre oportunidades
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="/cv-jose-angel-salinas.pdf"
            download
            class="inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
            </svg>
            Descargar CV
          </a>
          <a 
            href="/contacto/"
            class="border-2 border-blue-600 text-blue-600 dark:text-blue-400 hover:bg-blue-600 hover:text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300"
          >
            Contactar
          </a>
        </div>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>
